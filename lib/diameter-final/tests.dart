import 'dart:typed_data';
import './diameter_message.dart';

void main() {
  // testCerDecode(cer);
  // testCerDecode(data2);
  // testCerDecode(data3);

  testDiameterConstructor();
}

void testCerDecode(Uint8List msg) {
  final decodedMessage = DiameterMessage.decode(msg);
  print("cer: $decodedMessage");

  final encodedMessage = decodedMessage.encode();

  bool isMatching = msg.length == encodedMessage.length &&
      List.generate(msg.length, (index) => msg[index] == encodedMessage[index])
          .every((match) => match);

  print('Re-encoded message matches original: $isMatching');

//   cer: Diameter Message:
//   Version: 1
//   Length: 140
//   Flags: 128
//   Command Code: 257
//   Application ID: 0
//   Hop-by-Hop ID: 1470542647
//   End-to-End ID: 4122139619
//   AVPs:
//     AVP(Code: 263, Flags: 64, Length: 18, Value: 1349348599)
//     AVP(Code: 264, Flags: 96, Length: 27, Value: gx.pcef.example.com)
//     AVP(Code: 296, Flags: 64, Length: 24, Value: pcef.example.com)
//     AVP(Code: 266, Flags: 96, Length: 12, Value: 10415)
//     AVP(Code: 278, Flags: 64, Length: 12, Value: 219081)
//     AVP(Code: 265, Flags: 96, Length: 12, Value: 10415)
//     AVP(Code: 258, Flags: 64, Length: 12, Value: 4)

// data2: Diameter Message:
//   Version: 1
//   Length: 160
//   Flags: 0
//   Command Code: 257
//   Application ID: 0
//   Hop-by-Hop ID: 1470542647
//   End-to-End ID: 4122139619
//   AVPs:
//     AVP(Code: 263, Flags: 64, Length: 18, Value: 1349348599)
//     AVP(Code: 268, Flags: 64, Length: 12, Value: 2001)
//     AVP(Code: 264, Flags: 96, Length: 16, Value: test.com)
//     AVP(Code: 296, Flags: 64, Length: 11, Value: com)
//     AVP(Code: 257, Flags: 96, Length: 26, Value: [0, 2, 32, 1, 13, 184, 51, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1])
//     AVP(Code: 257, Flags: 96, Length: 14, Value: [0, 1, 1, 2, 3, 4])
//     AVP(Code: 266, Flags: 96, Length: 12, Value: 123)
//     AVP(Code: 269, Flags: 0, Length: 21, Value: node-diameter)

// data3: Diameter Message:
//   Version: 1
//   Length: 124
//   Flags: 128
//   Command Code: 257
//   Application ID: 0
//   Hop-by-Hop ID: 57937898
//   End-to-End ID: 2255810703
//   AVPs:
//     AVP(Code: 263, Flags: 64, Length: 18, Value: 3443133220)
//     AVP(Code: 264, Flags: 96, Length: 19, Value: gx.pcef.com)
//     AVP(Code: 296, Flags: 64, Length: 16, Value: pcef.com)
//     AVP(Code: 266, Flags: 96, Length: 12, Value: 10415)
//     AVP(Code: 278, Flags: 64, Length: 12, Value: 219081)
//     AVP(Code: 265, Flags: 96, Length: 12, Value: 10415)
//     AVP(Code: 258, Flags: 64, Length: 12, Value: 4)
}

void testDiameterConstructor() {
  final dm = DiameterMessage.fromFields(
      version: 1,
      // length: 124,
      flags: 128,
      commandCode: 257,
      applicationId: 0,
      hopByHopId: 57937898,
      endToEndId: 2255810703,
      avpList: [
        AVP(263, 64, 18, [51, 52, 52, 51, 49, 51, 51, 50, 50, 48]),
        AVP(264, 96, 19, [103, 120, 46, 112, 99, 101, 102, 46, 99, 111, 109]),
        AVP(296, 64, 16, [112, 99, 101, 102, 46, 99, 111, 109]),
        AVP(266, 96, 12, [0, 0, 40, 175]),
        AVP(278, 64, 12, [0, 3, 87, 201]),
        AVP(265, 96, 12, [0, 0, 40, 175]),
        AVP(258, 64, 12, [0, 0, 0, 4]),
      ]);

  final encoded = dm.encode();
  final enc = DiameterMessage.decode(encoded);
  print("$enc");
  print("diameter message length: ${enc.length}");

  
//   Version: 1
//   Length: 124
//   Flags: 128
//   Command Code: 257
//   Application ID: 0
//   Hop-by-Hop ID: 57937898
//   End-to-End ID: 2255810703
//   AVPs:
//     AVP(Code: 263, Flags: 64, Length: 18, Value: 3443133220)
//     AVP(Code: 264, Flags: 96, Length: 19, Value: gx.pcef.com)
//     AVP(Code: 296, Flags: 64, Length: 16, Value: pcef.com)
//     AVP(Code: 266, Flags: 96, Length: 12, Value: 10415)
//     AVP(Code: 278, Flags: 64, Length: 12, Value: 219081)
//     AVP(Code: 265, Flags: 96, Length: 12, Value: 10415)
//     AVP(Code: 258, Flags: 64, Length: 12, Value: 4)
}

final cer = Uint8List.fromList([
  1,
  0,
  0,
  140,
  128,
  0,
  1,
  1,
  0,
  0,
  0,
  0,
  87,
  166,
  179,
  55,
  245,
  178,
  219,
  227,
  0,
  0,
  1,
  7,
  64,
  0,
  0,
  18,
  49,
  51,
  52,
  57,
  51,
  52,
  56,
  53,
  57,
  57,
  0,
  0,
  0,
  0,
  1,
  8,
  96,
  0,
  0,
  27,
  103,
  120,
  46,
  112,
  99,
  101,
  102,
  46,
  101,
  120,
  97,
  109,
  112,
  108,
  101,
  46,
  99,
  111,
  109,
  0,
  0,
  0,
  1,
  40,
  64,
  0,
  0,
  24,
  112,
  99,
  101,
  102,
  46,
  101,
  120,
  97,
  109,
  112,
  108,
  101,
  46,
  99,
  111,
  109,
  0,
  0,
  1,
  10,
  96,
  0,
  0,
  12,
  0,
  0,
  40,
  175,
  0,
  0,
  1,
  22,
  64,
  0,
  0,
  12,
  0,
  3,
  87,
  201,
  0,
  0,
  1,
  9,
  96,
  0,
  0,
  12,
  0,
  0,
  40,
  175,
  0,
  0,
  1,
  2,
  64,
  0,
  0,
  12,
  0,
  0,
  0,
  4
]);
final data2 = Uint8List.fromList([
  1,
  0,
  0,
  160,
  0,
  0,
  1,
  1,
  0,
  0,
  0,
  0,
  87,
  166,
  179,
  55,
  245,
  178,
  219,
  227,
  0,
  0,
  1,
  7,
  64,
  0,
  0,
  18,
  49,
  51,
  52,
  57,
  51,
  52,
  56,
  53,
  57,
  57,
  0,
  0,
  0,
  0,
  1,
  12,
  64,
  0,
  0,
  12,
  0,
  0,
  7,
  209,
  0,
  0,
  1,
  8,
  96,
  0,
  0,
  16,
  116,
  101,
  115,
  116,
  46,
  99,
  111,
  109,
  0,
  0,
  1,
  40,
  64,
  0,
  0,
  11,
  99,
  111,
  109,
  0,
  0,
  0,
  1,
  1,
  96,
  0,
  0,
  26,
  0,
  2,
  32,
  1,
  13,
  184,
  51,
  18,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  1,
  0,
  0,
  0,
  0,
  1,
  1,
  96,
  0,
  0,
  14,
  0,
  1,
  1,
  2,
  3,
  4,
  0,
  0,
  0,
  0,
  1,
  10,
  96,
  0,
  0,
  12,
  0,
  0,
  0,
  123,
  0,
  0,
  1,
  13,
  0,
  0,
  0,
  21,
  110,
  111,
  100,
  101,
  45,
  100,
  105,
  97,
  109,
  101,
  116,
  101,
  114,
  0,
  0,
  0
]);
final data3 = Uint8List.fromList([
  1,
  0,
  0,
  124,
  128,
  0,
  1,
  1,
  0,
  0,
  0,
  0,
  3,
  116,
  15,
  234,
  134,
  116,
  240,
  143,
  0,
  0,
  1,
  7,
  64,
  0,
  0,
  18,
  51,
  52,
  52,
  51,
  49,
  51,
  51,
  50,
  50,
  48,
  0,
  0,
  0,
  0,
  1,
  8,
  96,
  0,
  0,
  19,
  103,
  120,
  46,
  112,
  99,
  101,
  102,
  46,
  99,
  111,
  109,
  0,
  0,
  0,
  1,
  40,
  64,
  0,
  0,
  16,
  112,
  99,
  101,
  102,
  46,
  99,
  111,
  109,
  0,
  0,
  1,
  10,
  96,
  0,
  0,
  12,
  0,
  0,
  40,
  175,
  0,
  0,
  1,
  22,
  64,
  0,
  0,
  12,
  0,
  3,
  87,
  201,
  0,
  0,
  1,
  9,
  96,
  0,
  0,
  12,
  0,
  0,
  40,
  175,
  0,
  0,
  1,
  2,
  64,
  0,
  0,
  12,
  0,
  0,
  0,
  4
]);

final cea = Uint8List.fromList([
  1,
  0,
  0,
  160,
  0,
  0,
  1,
  1,
  0,
  0,
  0,
  0,
  87,
  166,
  179,
  55,
  245,
  178,
  219,
  227,
  0,
  0,
  1,
  7,
  64,
  0,
  0,
  18,
  49,
  51,
  52,
  57,
  51,
  52,
  56,
  53,
  57,
  57,
  0,
  0,
  0,
  0,
  1,
  12,
  64,
  0,
  0,
  12,
  0,
  0,
  7,
  209,
  0,
  0,
  1,
  8,
  96,
  0,
  0,
  16,
  116,
  101,
  115,
  116,
  46,
  99,
  111,
  109,
  0,
  0,
  1,
  40,
  64,
  0,
  0,
  11,
  99,
  111,
  109,
  0,
  0,
  0,
  1,
  1,
  96,
  0,
  0,
  26,
  0,
  2,
  32,
  1,
  13,
  184,
  51,
  18,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  1,
  0,
  0,
  0,
  0,
  1,
  1,
  96,
  0,
  0,
  14,
  0,
  1,
  1,
  2,
  3,
  4,
  0,
  0,
  0,
  0,
  1,
  10,
  96,
  0,
  0,
  12,
  0,
  0,
  0,
  123,
  0,
  0,
  1,
  13,
  0,
  0,
  0,
  21,
  110,
  111,
  100,
  101,
  45,
  100,
  105,
  97,
  109,
  101,
  116,
  101,
  114,
  0,
  0,
  0
]);
